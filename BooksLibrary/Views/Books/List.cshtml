<script src="~/Scripts/knockout-3.4.0.js"></script>
<script src="~/Scripts/knockout.simpleGrid.3.0.js"></script>
<link href="~/Content/Site.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/knockout.bindings.js"></script>
 
<button id="addBook" type="button" style="margin-bottom: 20px;" class="btn btn-primary">Add new book</button>
<button class="btn btn-success" style="margin-bottom: 20px;" data-bind='click: sortByName'>Sort by title</button>
<button class="btn btn-success" style="margin-bottom: 20px;" data-bind='click: sortByName'>Sort by year</button>
<div id="booksList" data-bind='uniqueName: true'>
    <div data-bind='simpleGrid: booksGrid'> </div>
</div>

<form id="newBook" data-bind="visible: false, submit: addItem">


    <div class="form-group">
        <label style="margin-top: 20px;" for="title">Название книги:</label>
        <input type="text" class="form-control" id="title" data-bind='value: title' placeholder="Название книги">

        <div id="authorsList" class="form-inline">
            <p>
                <label style="margin-top: 20px;" for="pages">Авторы:</label>
                <a href="#" id="addAuthor" class="btn btn-link" data-bind='click: addAuthor'>Еще автор</a><br />
                <div id="authors" data-bind='foreach: authors'>
                    <input type="text" class="form-control" id="newame" data-bind='value: name, uniqueName: true' placeholder="Имя"><br />
                    <input style="margin-bottom: 20px;" type="text" class="form-control" data-bind='value: surname, uniqueName: true' id="surname" placeholder="Фамилия" />
                    <a href="#" id="remove" data-bind="click: $root.removeAuthor">Удалить</a><br />
                </div>
            </p>
        </div>

        <label style="margin-top: 20px;" for="pages">Количество страниц:</label>
        <input type="text" class="form-control" id="pages" data-bind='value: pages' placeholder="Количество страниц">

        <label style="margin-top: 20px;" for="phouse">Издательство:</label>
        <input type="text" class="form-control" id="phouse" data-bind='value: phouse' placeholder="Издательство">

        <label style="margin-top: 20px;" for="pdate">Год публикации:</label>
        <input type="date" class="form-control" id="pdate" data-bind='value: pdate' placeholder="Год публикации">

        <label style="margin-top: 20px;" for="isbn">Международный стандартный книжный номер:</label>
        <input type="text" class="form-control" id="isbn" data-bind='value: isbn' placeholder="ISBN">

        <label style="margin-top: 20px;" for="cover">Изображение:</label>
        <input type="file" id="fileUpload" class="file_input_hidden" data-bind="FileUpload: name, fileObjectURL: url, fileBinaryData: cover" /> 
    </div>
    <button id="addNewBook" style="margin-top: 20px;" class="btn btn-danger" type="submit">Add</button>
</form>

<script>

    //ko.applyBindings(viewModel, document.getElementById("authorsList"));

    var BooksModel = function (items) {
        this.items = ko.observableArray(items);
        this.title = ko.observable("");
        this.name = ko.observable("");
        this.surname = ko.observable("");
        this.pages = ko.observable("");
        this.phouse = ko.observable("");
        this.pdate = ko.observable("");
        this.isbn = ko.observable("");
        this.name = ko.observable("");
        this.url = ko.observable("");
        this.cover = ko.observableArray("");

        this.authors = ko.observableArray("");;

        this.addItem = function () {
            this.items = {
                Title: this.title(),
                Authors: this.authors(),
                Pages: this.pages(),
                Publisher: this.phouse(),
                Year: this.pdate(),
                ISBN: this.isbn(),
                Cover: this.cover()
            };
       

            $.ajax({
                type: 'POST',
                url: '/Books/AddBook',
                data: JSON.stringify(this.items),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (books) {
                    ko.cleanNode(document.getElementById("booksList"));
 
                    GetBooks();
                    $("#booksList").show();
                    $("#newBook").hide();
                },
                error: function (emp) {
                    alert('error');
                }
            });


           
        }.bind(this);


        this.authors.push({
            name: "",
            surname: ""
        });


        this.addAuthor = function () {
            this.authors.push({
                name: "",
                surname: ""
            });
        };

        this.removeAuthor = function (author) {
            this.authors.remove(author);
        }.bind(this);
    };


    ko.applyBindings(new BooksModel(), document.getElementById("newBook"));

    GetBooks();
    function GetBooks() {
        $.ajax({
            type: 'GET',
            url: '/Books/GetBooks',
            success: function (books) {
                var booksList = [];
                $.each(books, (i, book) => {
                    booksList.push(book);
                })

                ko.applyBindings(new PagedGridModel(booksList), document.getElementById("booksList"));


            },
            error: function (emp) {
                alert('error');
            }
        });
    }

    var PagedGridModel = function (items) {
        this.items = ko.observableArray(items);

        this.addItem = function () {
            this.items.push({ name: "New item", sales: 0, price: 100 });
        };

        this.sortByName = function () {
            this.items.sort(function (a, b) {
                return a.name < b.name ? -1 : 1;
            });
        };

        this.jumpToFirstPage = function () {
            this.gridViewModel.currentPageIndex(0);
        };

        this.booksGrid = new ko.simpleGrid.viewModel({
            data: this.items,
            columns: [
                { headerText: "№", rowText: "Id" },
                { headerText: "Title", rowText: "Title" },
                {
                    headerText: "Authors", rowText: function (item) {
                        var authors = [];
                        $.each(item.Authors, (i, author) => {
                            authors.push(' ' + author.Name + ' ' + author.Surname);
                        })
                        return authors;
                    }
                },
                { headerText: "Pages", rowText: "Pages" },
                { headerText: "Publisher", rowText: "Publisher" },
                { headerText: "Year", rowText: "Year" },
                { headerText: "ISBN", rowText: "ISBN" },
                { headerText: "Cover", rowText: "Cover" },
                {
                    headerText: "Actions", rowText:
                        {
                            edit: function (item) {
                                return function () {
                                    alert(item.Id)
                                }
                            },
                            deletion: function (item) {
                                return function () {
                                    alert(item.Id)
                                }
                            }
                        }
                },
            ],
            pageSize: 10
        });
    };



    $("#addBook").click(function () {
        $("#booksList").hide();
        $("#newBook").show();
    });


</script>